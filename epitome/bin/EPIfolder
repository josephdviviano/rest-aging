#!/usr/bin/env python
"""
###############################################################################
EPIfolder: Generating your EPItome folder directories since 2014.

    Allows you to interactively generate an appropriate folder structure for
    your EPItome experiments.

###############################################################################
"""

import os, sys
import epitome as epi

def print_dirs(in_dir):
    """
    Prints the directories found within the input directory.
    """

    dir_list = [d for d in os.listdir(in_dir) if
                           os.path.isdir(os.path.join(in_dir, d)) == True]
    dir_list.sort()
    for d in dir_list:
        print(d)
    if len(dir_list) == 0:
        print('None found.')

def edit_mode(mode):
    """
    Edits single image modalities within a subject folder.
    """
    
    # print options
    print('\nCurrent sessions: ')
    print_dirs(mode)

    # move onto mode/run loop
    print('\nHow many sessions should there be?')

    sessions = raw_input('Sessions: ' )

    try:
        sessions = int(sessions)
        for sess in range(sessions):
            s = sess+1
            sess_name = 'SESS' + '%02d' % s
            os.system('mkdir ' + os.path.join(mode, sess_name))

            print('\nHow many runs in session ' + '%02d' % s + '?')
            runs = raw_input('Runs: ')

            try:
                runs = int(runs)
                for run in range(runs):
                    r = run+1
                    run_name = 'RUN' + '%02d' % r 
                    os.system('mkdir ' + os.path.join(mode, sess_name, 
                                                             run_name))
            except:
                print('Number of runs should be integer!')
    except:
        print('Number of sessions should be integer!')

def edit_subject(subject):
    """
    A function that generates subject directories for use with EPItome. 
    """
    
    # print options
    print('\nCurrent image modalities:')
    print_dirs(subject)

    # move onto modality loop
    flag = 0
    while flag == 0:
        subj_name = os.path.basename(subject)
        print('\nWhat modality would you like to edit/add for ' + 
                                             str(subj_name) + '?')

        mode = raw_input('Mode: ')

        # make the modality folder, if it does not exist
        if os.path.isdir(os.path.join(subject, mode)) == False:
            os.system('mkdir ' + os.path.join(subject, mode))
        else:
            print('Editing existing modality ' + str(mode))

        # edit modality, and check for the escape flag
        edit_mode(os.path.join(subject, mode))

        print('\nWould you like to continue adding modes? (y/N)')
        response = raw_input('Continue? ')

        if response in ['Y', 'y']:
            pass
        else:
            print('Finished with ' + str(subject))
            flag = 1

def main():
    """
    A CLI for creating experiment directories for EPItome-XL.
    """

    dir_data, dir_pipe, dir_afni, cores = epi.config.return_paths()

    # make sure we have the appropriate permissions for the top directory
    if epi.utilities.has_permissions(dir_data) == False:
        sys.exit()

    # print a welcome message
    print('##################################################################')
    print('EPIfolder: Generating your EPItome folder directories since 2014.')
    print('##################################################################')

    # make experiment directory
    print('\nCurrent experiments:')
    print_dirs(dir_data)

    print('\nWhich experiment would you like to edit? ')
    expt_name = raw_input('Experiment: ')
    expt = os.path.join(dir_data, expt_name)

    if os.path.isdir(expt) == True:
        print('\nAlready exists! Adding to existing experiment.')
    else:
        # try to make the new directory
        try:
            os.system('mkdir ' + os.path.join(expt))
        except:
            pass

    # ensure we have the appropriate permissions for the experiment directory
    if epi.utilities.has_permissions(expt) == False:
        sys.exit()

    # print a list of the subject, if they exist
    if os.listdir(expt) == []:
        pass
    else:
        print('Current participants: ')
        print_dirs(expt)

    # move on to a subject loop
    flag = 0
    while flag == 0:
        
        print('\nInput subject name:')

        subject = raw_input('Subject: ')

        # make the subject folder, if it does not exist
        if os.path.isdir(os.path.join(expt, subject)) == False:
            os.system('mkdir ' + os.path.join(expt, subject))
        else:
            print('Editing existing subject ' + str(subject))

        # edit subject, and check for the escape flag
        edit_subject(os.path.join(expt, subject))

        print('\nWould you like to continue adding subjects? (y/N)')
        response = raw_input('Continue? ')

        if response in ['Y', 'y']:
            pass
        else:
            flag = 1

    print('Thanks for editing ' + str(expt_name) + '!')

# this is the command-line usage bit
if __name__ == "__main__":
    
    # listing available modules and associated help
    if len(sys.argv) == 1:
        main()

    # return the usage if the user does a silly thing
    else:
        print __doc__
